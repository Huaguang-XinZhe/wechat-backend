version: "3.8"

services:
  # 后端服务
  wechat-backend:
    build: .
    container_name: wechat-backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=wechat_miniprogram
      - DB_USER=root
      - DB_PASSWORD=your_password_here
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your_jwt_secret_key_here
      - WECHAT_APP_ID=your_wechat_app_id
      - WECHAT_APP_SECRET=your_wechat_app_secret
      - WECHAT_MCH_ID=your_merchant_id
      - WECHAT_API_KEY=your_api_key
      - PAYMENT_NOTIFY_URL=https://your-domain.com/api/payment/notify
    volumes:
      - ./logs:/app/logs
    depends_on:
      - mysql
      - redis
    restart: unless-stopped
    networks:
      - wechat-network

  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: wechat-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=your_password_here
      - MYSQL_DATABASE=wechat_miniprogram
      - MYSQL_CHARACTER_SET_SERVER=utf8mb4
      - MYSQL_COLLATION_SERVER=utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    networks:
      - wechat-network

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: wechat-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass your_redis_password
    restart: unless-stopped
    networks:
      - wechat-network

  # Nginx 代理（可选）
  nginx:
    image: nginx:alpine
    container_name: wechat-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - wechat-backend
    restart: unless-stopped
    networks:
      - wechat-network

# 数据卷
volumes:
  mysql_data:
  redis_data:

# 网络
networks:
  wechat-network:
    driver: bridge
